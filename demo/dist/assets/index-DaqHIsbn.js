(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))c(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function n(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(i){if(i.ep)return;i.ep=!0;const r=n(i);fetch(i.href,r)}})();const I="modulepreload",S=function(t){return"/"+t},p={},E=function(s,n,c){let i=Promise.resolve();if(n&&n.length>0){document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),l=a?.nonce||a?.getAttribute("nonce");i=Promise.allSettled(n.map(u=>{if(u=S(u),u in p)return;p[u]=!0;const g=u.endsWith(".css"),h=g?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${u}"]${h}`))return;const d=document.createElement("link");if(d.rel=g?"stylesheet":I,g||(d.as="script"),d.crossOrigin="",d.href=u,l&&d.setAttribute("nonce",l),document.head.appendChild(d),g)return new Promise((y,v)=>{d.addEventListener("load",y),d.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${u}`)))})}))}function r(a){const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=a,window.dispatchEvent(l),!l.defaultPrevented)throw a}return i.then(a=>{for(const l of a||[])l.status==="rejected"&&r(l.reason);return s().catch(r)})},b={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_APP_ENV:"beta",VITE_SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imh3cWRzcG1uZ2pjbnFkcWlqcGlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3OTAwMDUsImV4cCI6MjA3MjM2NjAwNX0._y1Vjipk_I2-4kyvJX-j4ncFR45cGKjxgFml3GPGibU",VITE_SUPABASE_URL:"https://hwqdspmngjcnqdqijpio.supabase.co"};console.log("[Environment] Checking import.meta.env:",b);const f="https://hwqdspmngjcnqdqijpio.supabase.co",m="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imh3cWRzcG1uZ2pjbnFkcWlqcGlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3OTAwMDUsImV4cCI6MjA3MjM2NjAwNX0._y1Vjipk_I2-4kyvJX-j4ncFR45cGKjxgFml3GPGibU",$=document.getElementById("env-debug");$.textContent="URL: Found, Key: Found";console.log("[Real Environment Check]",{url:`${f.slice(0,30)}...`,key:`${m.slice(0,10)}...`,hasUrl:!0,hasKey:!0});const{createClient:T}=await E(async()=>{const{createClient:t}=await import("https://esm.sh/@supabase/supabase-js@2");return{createClient:t}},[]);let o=null;o=T(f,m),e("✅ Supabase client initialized","success"),e(`   URL: ${f}`,"info"),e(`   Key: ${m.slice(0,20)}...`,"info");function e(t,s="info"){const n=document.getElementById("results-log"),c=new Date().toLocaleTimeString(),i={success:"text-green-400",error:"text-red-400",info:"text-blue-400",warning:"text-yellow-400"},r=document.createElement("div");r.className=i[s]||"text-gray-300",r.innerHTML=`<span class="text-gray-500">[${c}]</span> ${t}`,n.appendChild(r),n.scrollTop=n.scrollHeight}window.checkEnvironment=function(){e("🔧 Checking environment configuration...","info"),e(`🔍 Actual URL: ${f}`,"info"),e(`🔍 Actual Key: ${m.slice(0,20)+"..."}`,"info");const t=document.getElementById("url-status"),s=document.getElementById("key-status");t.innerHTML=`<span class="text-green-600">✅ ${f.slice(0,40)}...</span>`,e(`✅ Supabase URL configured: ${f}`,"success"),s.innerHTML=`<span class="text-green-600">✅ ${m.slice(0,10)}...</span>`,e(`✅ Supabase anon key configured: ${m.slice(0,20)}...`,"success")};window.testConnection=async function(){if(!o){e("❌ Cannot test connection - Supabase not configured","error"),e("🔧 Environment variables detected:","info"),e(`   VITE_SUPABASE_URL: ${f}`,"info"),e("   VITE_SUPABASE_ANON_KEY: Found","info");return}e("📡 Testing database connection...","info");try{const{data:t,error:s}=await o.from("prep_lists").select("id").limit(1),n=document.getElementById("connection-status");s?s.code==="42501"?(n.innerHTML='<div class="text-yellow-600">⚠️ Connected but RLS restrictions active (expected)</div>',e("⚠️ Connection successful but RLS policies are restricting access","warning"),e("💡 This is expected behavior - you need to authenticate first","info")):(n.innerHTML=`<div class="text-red-600">❌ Connection failed: ${s.message}</div>`,e(`❌ Connection failed: ${s.message}`,"error")):(n.innerHTML='<div class="text-green-600">✅ Database connection successful!</div>',e("✅ Database connection successful!","success"),e(`📊 Found ${t?t.length:0} prep lists`,"info"))}catch(t){e(`❌ Connection test failed: ${t.message}`,"error"),e("💡 Check if your .env file is in the project root","info")}};window.testSignUp=async function(){if(!o){e("❌ Cannot test authentication - Supabase not configured","error");return}const t=document.getElementById("signin-email").value,s=document.getElementById("signin-password").value;e(`👤 Creating test user: ${t}`,"info");try{const{data:n,error:c}=await o.auth.signUp({email:t,password:s,options:{data:{full_name:"Test User"}}});if(c)throw c;e("✅ Test user created successfully!","success"),w(!0,t)}catch(n){n.message.includes("User already registered")?(e("👤 User already exists, trying sign in...","info"),await window.testSignIn()):e(`❌ Sign up failed: ${n.message}`,"error")}};window.testSignIn=async function(){if(!o){e("❌ Cannot test authentication - Supabase not configured","error");return}const t=document.getElementById("signin-email").value,s=document.getElementById("signin-password").value;e(`🔐 Signing in: ${t}`,"info");try{const{data:n,error:c}=await o.auth.signInWithPassword({email:t,password:s});if(c)throw c;e("✅ Signed in successfully!","success"),w(!0,t)}catch(n){e(`❌ Sign in failed: ${n.message}`,"error")}};function w(t,s=""){const n=document.getElementById("auth-controls");n.innerHTML=`
                    <div class="text-green-600 mb-3">
                        ✅ Authenticated as: <strong>${s}</strong>
                    </div>
                    <button onclick="testSignOut(); return false;" class="bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm transition-colors">
                        Sign Out
                    </button>
                `}window.testSignOut=async function(){if(o)try{await o.auth.signOut(),e("✅ Signed out successfully","success"),location.reload()}catch(t){e(`❌ Sign out failed: ${t.message}`,"error")}};window.testPrepLists=async function(){if(!o){e("❌ Cannot test prep lists - Supabase not configured","error");return}e("📋 Testing prep lists...","info");try{const t={id:`test-${Date.now()}`,name:`Test Prep List ${new Date().toLocaleTimeString()}`,items:[{id:"1",name:"Test Item",quantity:"5",unit:"lbs"}]},{data:s,error:n}=await o.from("prep_lists").insert(t).select().single();if(n)throw n;e(`✅ Created prep list: "${s.name}"`,"success"),e(`🔗 Prep list ID: ${s.id}`,"info");const{data:c,error:i}=await o.from("prep_lists").select("*").limit(5);if(i)throw i;e(`✅ Successfully read ${c.length} prep lists from database`,"success")}catch(t){e(`❌ Prep list test failed: ${t.message}`,"error"),t.code==="42501"&&e("💡 This might be due to RLS policies - try authenticating first","info")}};window.testEvents=async function(){if(!o){e("❌ Cannot test events - Supabase not configured","error");return}e("📅 Testing events...","info");try{const t={id:`test-event-${Date.now()}`,title:`Test Event ${new Date().toLocaleTimeString()}`,event_date:new Date().toISOString().split("T")[0],status:"planning",total_servings:50},{data:s,error:n}=await o.from("events").insert(t).select().single();if(n)throw n;e(`✅ Created event: "${s.title}"`,"success")}catch(t){e(`❌ Event test failed: ${t.message}`,"error")}};window.testRecipes=async function(){if(!o){e("❌ Cannot test recipes - Supabase not configured","error");return}e("🍽️ Testing recipes...","info");try{const t={id:`test-recipe-${Date.now()}`,name:`Test Recipe ${new Date().toLocaleTimeString()}`,ingredients:["Test ingredient 1","Test ingredient 2"],instructions:"Test instructions for the recipe"},{data:s,error:n}=await o.from("recipes").insert(t).select().single();if(n)throw n;e(`✅ Created recipe: "${s.name}"`,"success")}catch(t){e(`❌ Recipe test failed: ${t.message}`,"error")}};window.testCreateData=async function(){e("🚀 Creating comprehensive test data...","info"),await window.testPrepLists(),await new Promise(t=>setTimeout(t,500)),await window.testEvents(),await new Promise(t=>setTimeout(t,500)),await window.testRecipes(),e("✅ Test data creation completed!","success")};window.clearLog=function(){document.getElementById("results-log").innerHTML="",e("Database testing console cleared","info")};window.addEventListener("load",()=>{e("🚀 Database testing interface loaded","info"),e("🔧 Environment check: URL=true, KEY=true","info"),window.checkEnvironment()});
